Ordre;Tâche à exécuter;Responsable direct;Détail de l’action
1;Inventorier les comptes LEGACY_SERVICE;DBA / SecurityAdmin;"sql SELECT NAME, ENV FROM SNOWFLAKE.ACCOUNT_USAGE.USERS WHERE USER_TYPE='LEGACY_SERVICE': exporter CSV « inventaire_comptes »"
2;Tagger chaque compte par environnement (DEV / REC / PROD);Chef de projet;"Ajouter colonne ENV dans le fichier."
3;Décider “downtime ?” compte par compte;Chef de projet + équipe appli;"Mettre « OUI / NON » dans la colonne Downtime."
4;Geler les jobs (si downtime = OUI);Ops / Orchestrateur;"Pause pipeline ou ALTER WAREHOUSE … SUSPEND:."
5;Créer ou modifier le compte;DBA / SecurityAdmin;"Downtime OUI : ALTER USER <user> SET TYPE=SERVICE: Downtime NON : CREATE USER <user>_SVC …"
6;Générer le PAT (1 an);DBA / SecurityAdmin;"ALTER USER <user> ADD PAT <nom> DAYS_TO_EXPIRY=365: Copier token_secret."
7;Déposer le PAT dans le Vault;SecOps;"Secret path : vault://snowflake/<env>/<user>/pat."
8;Remplacer username/password → PAT;DevOps / Équipe appli;"CI/CD variables, Talend context param, Airflow connexions, etc."
9;Redémarrer les jobs / warehouses;Ops;"ALTER WAREHOUSE … RESUME: relance pipeline."
10;Tester et valider;Équipe appli;"Vérifier exécution OK, comparer sorties (shadow run si compte neuf)."
11;Contrôle anti-password;SecOps;"sql SELECT COUNT(*) FROM SNOWFLAKE.ACCOUNT_USAGE.LOGIN_HISTORY WHERE USER_NAME='<user>' AND AUTHENTICATION_METHOD='PASSWORD' AND EVENT_TIMESTAMP >= DATEADD(day,-1,CURRENT_TIMESTAMP()): doit = 0."
12;Clôturer le lot & reporter;Chef de projet;"Mettre « Done » dans le suivi, informer le comité."

